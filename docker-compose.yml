services:
  eureka-server:
    image: charan0520/eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - ecommerce-network
    healthcheck:
      # This test command checks if the server's health endpoint is available.
      # It will only succeed when the application inside the container is fully running.
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  gateway:
    image: charan0520/gateway
    container_name: gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        # This condition tells Docker to wait until the eureka-server's
        # healthcheck passes before starting this service.
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=5
    networks:
      - ecommerce-network

  users:
    image: charan0520/users-service
    container_name: users-service
    ports:
      - "8003:8003"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb+srv://charan20:Charan12345@cluster0.xsdi5.mongodb.net/usersDb?retryWrites=true&w=majority&appName=Cluster0
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - ecommerce-network

  products:
    image: charan0520/products-service
    container_name: products-service
    ports:
      - "8002:8002"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb+srv://charan20:Charan12345@cluster0.xsdi5.mongodb.net/productsDb?retryWrites=true&w=majority&appName=Cluster0
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - ecommerce-network

  orders:
    image: charan0520/orders-service
    container_name: orders-service
    ports:
      - "8001:8001"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb+srv://charan20:Charan12345@cluster0.xsdi5.mongodb.net/ordersDb?retryWrites=true&w=majority&appName=Cluster0
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - ecommerce-network

  auth:
    image: charan0520/auth-service
    container_name: auth-service
    ports:
      - "8004:8004"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb+srv://charan20:Charan12345@cluster0.xsdi5.mongodb.net/usersDb?retryWrites=true&w=majority&appName=Cluster0
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - ecommerce-network

  analytics:
    image: charan0520/analytics-service
    container_name: analytics-service
    ports:
      - "8005:8005"
    depends_on:
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb+srv://charan20:Charan12345@cluster0.xsdi5.mongodb.net/ordersDb?retryWrites=true&w=majority&appName=Cluster0
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge